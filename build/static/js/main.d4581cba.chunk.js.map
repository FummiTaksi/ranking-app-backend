{"version":3,"sources":["components/form/Input.jsx","services/loginService.js","reducers/notificationReducer.js","reducers/loginReducer.js","containers/signin/SignInForm.jsx","containers/notification/Notification.jsx","services/rankingService.js","reducers/rankingReducer.js","containers/ranking/RankingForm.jsx","containers/ranking/RankingList.jsx","components/ranking/PositionList.jsx","containers/ranking/RankingView.jsx","services/playerService.js","reducers/playerReducer.js","components/player/Introduction.jsx","components/player/FilterForm.jsx","components/player/PlayerList.jsx","containers/player/PlayerPage.jsx","components/graph/Graph.jsx","components/graph/Graphs.jsx","containers/player/PlayerView.jsx","components/about/Aboutpage.jsx","containers/RankingApp.jsx","store.js","index.js"],"names":["Input","text","type","name","value","onChange","login","credentials","a","axios","post","response","data","initialState","icon","header","message","dispatchNotification","dispatch","setTimeout","reducer","store","action","username","undefined","admin","token","userInfo","window","localStorage","setItem","JSON","stringify","removeItem","SignInForm","props","state","password","handleFormChange","bind","logIn","e","this","setState","target","preventDefault","onSubmit","React","Component","mapDispatchToProps","loginService","content","ConnectedSignInForm","connect","ConnectedNotification","notification","className","Message","getConfigObject","headers","Authorization","createRanking","url","deleteRanking","rankingId","delete","getRanking","get","getRankings","allRankings","selectedRanking","loading","ranking","newState","rankings","notDeleted","filter","b","_id","deletedRanking","RankingForm","rankingFileBase64","rankingFileName","rankingName","rankingDate","Date","toString","onDrop","sendFile","approved","droppedFile","reader","FileReader","onload","event","result","readAsDataURL","createNewRanking","filenameText","id","multiple","accept","style","borderStyle","renderDropzone","renderDroppedFileName","renderUploadForm","renderFileUploadingForm","createContent","rankingService","connectedRankingForm","getTimeOfCompetition","rankingObject","date","getTime","RankingList","getAllRankings","deleteRankingById","onClick","substring","linkToRanking","Table","Row","key","Cell","Link","to","competitionName","positions","length","deleteButton","orderedRankings","slice","sort","Header","HeaderCell","Body","map","mapRanking","renderRankingCell","connectedRankingList","PositionList","position","positionObject","playerName","clubName","rating","RankingView","selectedIndex","toggleLeft","toggleRight","location","getRankingById","match","params","listLength","Button","disabled","Icon","orderedPositions","orderPositions","orderedPositionGroups","i","reduce","currentList","currentPosition","copyList","push","orderPositionGroups","players","pageInfo","renderNavigationButtons","connectedRankingView","getPlayers","getPlayer","selectedPlayer","error","typeIsLoading","typeIsError","player","Introduction","as","textAlign","circular","Content","FilterForm","handleNameChange","PlayerList","List","Item","renderPlayer","PlayerPage","filteredPlayers","filterPlayers","getAllPlayers","dbPlayer","toLowerCase","includes","nameContainsFilter","amountOfResults","playerService","connectedPlayerPage","Graph","label","labels","options","lineData","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Graphs","dates","mapDates","ratings","mapRatings","onlyPositions","mapPositions","scales","yAxes","ticks","reverse","PlayerView","getPlayerById","playerId","sorted","dateA","dateB","connectedPlayerView","AboutPage","Segment","Divider","href","linkWithIcon","path","iconName","Menu","RankingApp","initUser","logOut","renderUploadLink","logInOrLogOut","Route","exact","render","loggedUserJSON","getItem","parse","ConnectedRankingApp","combineReducers","notificationReducer","loginReducer","rankingReducer","playerReducer","createStore","applyMiddleware","thunk","next","newToken","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d4581cba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({\n  text, type, name, value, onChange,\n}) {\n  return (\n    <div>\n      {text}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\nInput.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","const initialState = { icon: '', header: '', message: '' };\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'CHANGE_NOTIFICATION') {\n    return action.message;\n  }\n  return store;\n};\n\nexport const notificationChange = (message, time) => async (dispatch) => {\n  dispatch({\n    type: 'CHANGE_NOTIFICATION',\n    message,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: 'CHANGE_NOTIFICATION',\n      message: {\n        icon: '',\n        header: '',\n        message: '',\n      },\n    });\n  }, time * 1000);\n};\n\nexport const dispatchNotification = (dispatch, message) => {\n  dispatch({\n    type: 'CHANGE_NOTIFICATION',\n    message,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: 'CHANGE_NOTIFICATION',\n      message: {\n        icon: '',\n        header: '',\n        message: '',\n      },\n    });\n  }, 5 * 1000);\n};\n\nexport default reducer;\n","import loginService from '../services/loginService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = {\n  username: undefined,\n  admin: undefined,\n  token: '',\n};\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'LOGIN') {\n    const userInfo = {\n      username: action.username,\n      admin: action.admin,\n      token: action.token,\n    };\n    window.localStorage.setItem('loggedUser', JSON.stringify(userInfo));\n    return {\n      username: action.username,\n      admin: action.admin,\n      token: action.token,\n    };\n  }\n  if (action.type === 'LOGOUT') {\n    window.localStorage.removeItem('loggedUser');\n    return {\n      username: undefined,\n      admin: undefined,\n      token: '',\n    };\n  }\n  return store;\n};\n\nexport const login = credentials => async (dispatch) => {\n  try {\n    const response = await loginService.login(credentials);\n    dispatch({\n      type: 'LOGIN',\n      username: response.username,\n      admin: response.admin,\n      token: response.token,\n    });\n    const header = 'Login successfully!';\n    const content = `Welcome back, ${response.username}!`;\n    const icon = 'sign in alternate';\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Login failed!';\n    const content = 'Wrong username or password!';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: 'LOGOUT',\n  });\n  const header = 'Logout successfully!';\n  const content = 'Thank you, come again!';\n  const icon = 'sign out alternate';\n  dispatchNotification(dispatch, { header, content, icon });\n};\n\nexport const initCurrentUser = () => async (dispatch) => {\n  const loggedUserJSON = window.localStorage.getItem('loggedUser');\n  if (loggedUserJSON) {\n    const credentials = JSON.parse(loggedUserJSON);\n    dispatch({\n      type: 'LOGIN',\n      username: credentials.username,\n      admin: credentials.admin,\n      token: credentials.token,\n    });\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../components/form/Input';\nimport { login } from '../../reducers/loginReducer';\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  handleFormChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  logIn(e) {\n    e.preventDefault();\n    const { logIn } = this.props;\n    logIn(this.state);\n    this.setState({\n      username: '',\n      password: '',\n    });\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div>\n        <h2>\n          Signing in is only available for admin!\n        </h2>\n        <form onSubmit={this.logIn}>\n          <Input\n            type=\"input\"\n            text=\"Username:\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleFormChange}\n          />\n          <Input\n            type=\"password\"\n            text=\"Password:\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleFormChange}\n          />\n          <button type=\"submit\">\n            Log in\n            {' '}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nSignInForm.propTypes = {\n  logIn: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  logIn: login,\n};\n\nconst ConnectedSignInForm = connect(\n  null,\n  mapDispatchToProps,\n)(SignInForm);\n\nexport default ConnectedSignInForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nfunction Notification({ notification }) {\n  if (notification.icon === '') {\n    return null;\n  }\n  return (\n    <div className=\"success\">\n      <Message\n        icon={notification.icon}\n        header={notification.header}\n        content={notification.content}\n      />\n    </div>\n  );\n}\nNotification.propTypes = {\n  notification: PropTypes.shape({\n    icon: PropTypes.string,\n    header: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  notification: state.notification,\n});\n\nconst ConnectedNotification = connect(\n  mapStateToProps,\n)(Notification);\n\nexport default ConnectedNotification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/ranking';\n\nlet token = '';\n\nconst getConfigObject = () => ({\n  headers: { Authorization: token },\n});\n\nconst createRanking = async (credentials) => {\n  const url = `${baseUrl}/new`;\n  const response = await axios.post(url, credentials, getConfigObject());\n  return response.data;\n};\n\nconst deleteRanking = async (rankingId) => {\n  const url = `${baseUrl}/${rankingId}`;\n  const response = await axios.delete(url, getConfigObject());\n  return response.data;\n};\n\nconst getRanking = async (rankingId) => {\n  const url = `${baseUrl}/${rankingId}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst getRankings = async () => {\n  const url = `${baseUrl}/`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const tokenChanger = store => next => (action) => {\n  next(action);\n  const state = store.getState();\n  const newToken = state.login.token;\n  token = `bearer ${newToken}`;\n};\n\nexport default {\n  createRanking, getRankings, deleteRanking, getRanking,\n};\n","import rankingService from '../services/rankingService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = { allRankings: [], selectedRanking: {}, loading: false };\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'CREATE_RANKING') {\n    const allRankings = [...store.allRankings, action.content.ranking];\n    const newState = { ...store, allRankings, loading: false };\n    return newState;\n  }\n  if (action.type === 'CREATING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'SETTING_RANKINGS') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'SET_RANKINGS') {\n    const newState = { ...store, allRankings: action.content.rankings, loading: false };\n    return newState;\n  }\n  if (action.type === 'DELETING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'DELETE_RANKING') {\n    const notDeleted = store.allRankings.filter(b => b._id !== action.content.deletedRanking._id);\n    const newState = { ...store, allRankings: notDeleted, loading: false };\n    return newState;\n  }\n  if (action.type === 'GETTING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'GET_RANKING') {\n    const newState = { ...store, selectedRanking: action.content.ranking, loading: false };\n    return newState;\n  }\n  return store;\n};\n\nexport const createRanking = createContent => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'CREATING_RANKING',\n    });\n    const response = await rankingService.createRanking(createContent);\n    const header = `Ranking ${createContent.rankingName} was created succsefully!`;\n    const content = 'Click Rankings to view ranking you created.';\n    const icon = 'thumbs up';\n    dispatch({\n      type: 'CREATE_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error occured while creating ranking';\n    const content = 'Make sure excel file is correct rating file';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const deleteRanking = rankingId => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'DELETING_RANKING',\n    });\n    const response = await rankingService.deleteRanking(rankingId);\n    const header = `Ranking ${response.deletedRanking.competitionName} was deleted succsefully!`;\n    const content = 'Page should update list automatically';\n    const icon = 'thumbs up';\n    dispatch({\n      type: 'DELETE_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error occured while deleting ranking';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const getRankings = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'SETTING_RANKINGS',\n    });\n    const response = await rankingService.getRankings();\n    const header = 'Rankings fetched successfully!';\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'SET_RANKINGS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching rankings';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const getRanking = rankingId => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_RANKING',\n    });\n    const response = await rankingService.getRanking(rankingId);\n    const header = `Ranking ${response.ranking.competitionName} fetched successfully!`;\n    const content = 'Have fun browsing!';\n    const icon = 'trophy';\n    dispatch({\n      type: 'GET_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching ranking';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport { createRanking } from '../../reducers/rankingReducer';\nimport Input from '../../components/form/Input';\n\nconst youAreNotAllowed = () => (\n  <h3>\n    You are not allowed to be here\n  </h3>\n);\n\nclass RankingForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rankingFileBase64: undefined,\n      rankingFileName: '',\n      rankingName: '',\n      rankingDate: new Date().toString(),\n    };\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.sendFile = this.sendFile.bind(this);\n  }\n\n  onDrop(approved) {\n    const droppedFile = approved[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({\n        rankingFileBase64: event.target.result,\n        rankingFileName: droppedFile.name,\n      });\n    };\n    reader.readAsDataURL(droppedFile);\n  }\n\n  sendFile(e) {\n    e.preventDefault();\n    const { rankingFileBase64, rankingName, rankingDate } = this.state;\n    const credentials = {\n      rankingFileBase64,\n      rankingName,\n      rankingDate,\n    };\n    const { createNewRanking } = this.props;\n    createNewRanking(credentials);\n    this.setState({\n      rankingFileBase64: undefined,\n      rankingFileName: '',\n      rankingName: '',\n      rankingDate: '',\n    });\n  }\n\n  handleFormChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  renderUploadForm() {\n    const { rankingFileBase64, rankingName, rankingDate } = this.state;\n    if (rankingFileBase64) {\n      return (\n        <form onSubmit={this.sendFile}>\n          <Input\n            type=\"input\"\n            text=\"Name of ranking:\"\n            name=\"rankingName\"\n            value={rankingName}\n            onChange={this.handleFormChange}\n          />\n          <Input\n            type=\"date\"\n            text=\"Date of competition:\"\n            name=\"rankingDate\"\n            value={rankingDate}\n            onChange={this.handleFormChange}\n          />\n          <button type=\"submit\">\n            Upload\n          </button>\n        </form>\n      );\n    }\n    return null;\n  }\n\n  renderDroppedFileName() {\n    const { rankingFileBase64, rankingFileName } = this.state;\n    if (rankingFileBase64) {\n      const filenameText = `Filename: ${rankingFileName}`;\n      return (\n        <p>\n          {filenameText}\n        </p>\n      );\n    }\n    return null;\n  }\n\n  renderDropzone() {\n    return (\n      <div id=\"fileDrop\">\n        <h3>\n          Drop excel file to create new ranking\n        </h3>\n        <Dropzone\n          className=\"field upload-box\"\n          onDrop={this.onDrop}\n          multiple={false}\n          accept=\".xls\"\n        >\n          <div className=\"field\" style={{ borderStyle: 'dashed' }}>\n            <p className=\"upload-p\">\n              Click to navigate to the file or drag and drop them here.\n            </p>\n            <br />\n          </div>\n        </Dropzone>\n      </div>\n    );\n  }\n\n  renderFileUploadingForm() {\n    return (\n      <div>\n        {this.renderDropzone()}\n        {this.renderDroppedFileName()}\n        {this.renderUploadForm()}\n      </div>\n    );\n  }\n\n  render() {\n    const { credentials } = this.props;\n    const { admin } = credentials;\n    return (\n      <div>\n        {admin && this.renderFileUploadingForm()}\n        {!admin && youAreNotAllowed()}\n      </div>\n    );\n  }\n}\n\nRankingForm.propTypes = {\n  createNewRanking: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    admin: PropTypes.bool,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  createNewRanking: createRanking,\n};\n\nconst mapStateToProps = state => ({ credentials: state.login });\n\nconst connectedRankingForm = connect(mapStateToProps, mapDispatchToProps)(RankingForm);\n\nexport default connectedRankingForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getRankings, deleteRanking } from '../../reducers/rankingReducer';\n\nconst getTimeOfCompetition = (rankingObject) => {\n  const date = new Date(rankingObject.date);\n  return date.getTime();\n};\n\nconst orderRankingsByDate = (rankings) => {\n  const copyList = rankings.slice();\n  return copyList.sort((a, b) => getTimeOfCompetition(b) - getTimeOfCompetition(a));\n};\n\nclass RankingList extends React.Component {\n  async componentDidMount() {\n    const { getAllRankings } = this.props;\n    await getAllRankings();\n  }\n\n  deleteRanking(rankingId) {\n    const { deleteRankingById } = this.props;\n    deleteRankingById(rankingId);\n  }\n\n  deleteButton(rankingId) {\n    return (\n      <button type=\"button\" className=\"delete\" onClick={() => this.deleteRanking(rankingId)}>\n        Delete\n      </button>\n    );\n  }\n\n  renderRankingCell(rankingObject) {\n    const date = rankingObject.date.substring(0, 10);\n    const linkToRanking = `/rankings/${rankingObject._id}`;\n    const { credentials } = this.props;\n    const { admin } = credentials;\n    return (\n      <Table.Row key={rankingObject._id}>\n        <Table.Cell>\n          <Link to={linkToRanking}>\n            {' '}\n            {rankingObject.competitionName}\n          </Link>\n        </Table.Cell>\n        <Table.Cell>\n          {date}\n        </Table.Cell>\n        <Table.Cell>\n          {rankingObject.positions.length }\n        </Table.Cell>\n        <Table.Cell>\n          { admin && this.deleteButton(rankingObject._id)}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  render() {\n    const { ranking } = this.props;\n    const { allRankings } = ranking;\n    if (ranking.loading) {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui textloader\">\n              Loading rankings from database\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (allRankings.length === 0) {\n      return (\n        <p id=\"noRankings\">\n          No rankings saved to database yet\n        </p>\n      );\n    }\n    const orderedRankings = orderRankingsByDate(allRankings);\n    return (\n      <div id=\"rankingList\">\n        <h3>\n          {`Here are all ${orderedRankings.length} rankings that are uploaded to this site`}\n        </h3>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                Competition name\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                Date\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                Players\n              </Table.HeaderCell>\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {orderedRankings.map(mapRanking => this.renderRankingCell(mapRanking))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n\nRankingList.propTypes = {\n  getAllRankings: PropTypes.func.isRequired,\n  deleteRankingById: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    admin: PropTypes.bool,\n  }).isRequired,\n  ranking: PropTypes.shape({\n    allRankings: PropTypes.array,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  getAllRankings: getRankings,\n  deleteRankingById: deleteRanking,\n};\n\nconst mapStateToProps = state => ({\n  ranking: state.ranking,\n  credentials: state.login,\n});\n\nconst connectedRankingList = connect(mapStateToProps, mapDispatchToProps)(RankingList);\nexport default connectedRankingList;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst renderPositionCell = positionObject => (\n  <Table.Row key={positionObject._id}>\n    <Table.Cell>\n      {positionObject.position}\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.playerName}\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.clubName }\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.rating}\n    </Table.Cell>\n  </Table.Row>\n);\n\nfunction PositionList({ positions }) {\n  return (\n    <div>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              Position\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Player\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Club\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Rating\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <tbody>\n          {positions.map(position => renderPositionCell(position))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nPositionList.propTypes = {\n  positions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PositionList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getRanking } from '../../reducers/rankingReducer';\nimport PositionList from '../../components/ranking/PositionList';\n\nconst orderPositions = (selectedRanking) => {\n  const copyList = selectedRanking.positions.slice();\n  return copyList.sort((a, b) => a.position - b.position);\n};\n\nconst orderPositionGroups = (orderedPositions) => {\n  let i = 0;\n  return orderedPositions.reduce((currentList, currentPosition) => {\n    const copyList = currentList;\n    if (copyList[i] && currentList[i].length >= 100) {\n      i += 1;\n    }\n    if (!currentList[i]) {\n      copyList[i] = [];\n    }\n    copyList[i].push(currentPosition);\n    return copyList;\n  }, []);\n};\n\nclass RankingView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n    };\n    this.toggleLeft = this.toggleLeft.bind(this);\n    this.toggleRight = this.toggleRight.bind(this);\n  }\n\n  componentDidMount() {\n    const { location, getRankingById } = this.props;\n    const { rankingId } = location.match.params;\n    getRankingById(rankingId);\n  }\n\n  toggleLeft() {\n    const { selectedIndex } = this.state;\n    this.setState({\n      selectedIndex: selectedIndex - 1,\n    });\n  }\n\n  toggleRight() {\n    const { selectedIndex } = this.state;\n    this.setState({\n      selectedIndex: selectedIndex + 1,\n    });\n  }\n\n  renderNavigationButtons(listLength) {\n    const { selectedIndex } = this.state;\n    return (\n      <div id=\"navigationButtons\">\n        <Button\n          onClick={this.toggleLeft}\n          disabled={selectedIndex === 0}\n        >\n          <Icon name=\"angle double left\" />\n        </Button>\n        <Button\n          onClick={this.toggleRight}\n          disabled={selectedIndex === listLength - 1}\n        >\n          <Icon name=\"angle double right\" />\n        </Button>\n      </div>\n    );\n  }\n\n  render() {\n    const { ranking } = this.props;\n    if (ranking.loading) {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui textloader\">\n              Loading ranking from database\n            </div>\n          </div>\n        </div>\n      );\n    }\n    const { selectedRanking } = ranking;\n    if (!selectedRanking.positions) {\n      return (\n        <p>\n          No ranking with this id!\n        </p>\n      );\n    }\n    const orderedPositions = orderPositions(selectedRanking);\n    const orderedPositionGroups = orderPositionGroups(orderedPositions);\n    const players = `${selectedRanking.competitionName}, players ${orderedPositions.length}`;\n    const { selectedIndex } = this.state;\n    const pageInfo = `Showing page ${selectedIndex + 1} / ${orderedPositionGroups.length}`;\n    return (\n      <div>\n        <h3>\n          {players}\n        </h3>\n        <h4>\n          {pageInfo}\n        </h4>\n        {this.renderNavigationButtons(orderedPositionGroups.length)}\n        <PositionList positions={orderedPositionGroups[selectedIndex]} />\n        {this.renderNavigationButtons(orderedPositionGroups.length)}\n      </div>\n\n    );\n  }\n}\n\nRankingView.propTypes = {\n  location: PropTypes.shape({\n    match: { params: { rankingId: PropTypes.string } },\n  }).isRequired,\n  ranking: PropTypes.shape({\n    loading: PropTypes.bool,\n    allRankings: PropTypes.array,\n    selectedRanking: { positions: PropTypes.array, competitionName: PropTypes.string },\n  }).isRequired,\n  getRankingById: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  getRankingById: getRanking,\n};\n\nconst mapStateToProps = state => ({\n  ranking: state.ranking,\n});\n\nconst connectedRankingView = connect(mapStateToProps, mapDispatchToProps)(RankingView);\n\nexport default connectedRankingView;\n","import axios from 'axios';\n\nconst baseUrl = '/api/players';\n\nconst getPlayers = async () => {\n  const url = `${baseUrl}/`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst getPlayer = async (id) => {\n  const url = `${baseUrl}/${id}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport default { getPlayers, getPlayer };\n","import playerService from '../services/playerService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = {\n  players: [], selectedPlayer: undefined, loading: false, error: false,\n};\n\nconst typeIsLoading = type => type === 'GETTING_PLAYERS' || type === 'GETTING_PLAYER';\n\nconst typeIsError = type => type === 'GET_PLAYERS_FAILURE' || type === 'GET_PLAYER_FAILURE';\n\nconst reducer = (store = initialState, action) => {\n  if (typeIsLoading(action.type)) {\n    const newState = { ...store, loading: true, error: false };\n    return newState;\n  }\n  if (action.type === 'GET_PLAYERS_SUCCESS') {\n    const newState = {\n      ...store, players: action.content.players, loading: false, error: false,\n    };\n    return newState;\n  }\n  if (action.type === 'GET_PLAYER_SUCCESS') {\n    const newState = {\n      ...store, selectedPlayer: action.content.player, loading: false, error: false,\n    };\n    return newState;\n  }\n  if (typeIsError(action.type)) {\n    const newState = { ...store, loading: false, error: true };\n    return newState;\n  }\n  return store;\n};\n\n\nexport const getPlayers = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_PLAYERS',\n    });\n    const response = await playerService.getPlayers();\n    const header = 'Players fetched successfully!';\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'GET_PLAYERS_SUCCESS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching players';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatch({\n      type: 'GET_PLAYERS_FAILURE',\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\n\nexport const getPlayer = id => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_PLAYER',\n    });\n    const response = await playerService.getPlayer(id);\n    const header = `Player ${response.player.name} fetched successfully!`;\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'GET_PLAYER_SUCCESS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching player';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatch({\n      type: 'GET_PLAYER_FAILURE',\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\nexport default reducer;\n","import React from 'react';\nimport {\n  Header, Icon,\n} from 'semantic-ui-react';\n\nconst Introduction = () => (\n  <div>\n    <Header as=\"h2\" icon textAlign=\"center\">\n      <Icon name=\"chart line\" circular />\n      <Header.Content>\n        All rating data in one place\n      </Header.Content>\n      <div className=\"sub header\">\n       Filter players by writing players name, click players name to view statistics\n      </div>\n      <div className=\"sub header\">\n        NOTE: Write surname before firstname\n      </div>\n    </Header>\n  </div>\n);\n\nexport default Introduction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\n\nfunction FilterForm({ handleNameChange, playerName }) {\n  return (\n    <div>\n    Name:\n      <Input type=\"text\" onChange={handleNameChange} value={playerName} text=\"Name\" />\n    </div>\n  );\n}\n\nFilterForm.propTypes = {\n  handleNameChange: PropTypes.func.isRequired,\n  playerName: PropTypes.string.isRequired,\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { List } from 'semantic-ui-react';\n\nconst renderPlayer = player => (\n  <List.Item key={player._id} id={player._id}>\n    <Link to={`/players/${player._id}`}>\n      {player.name}\n    </Link>\n  </List.Item>\n);\n\nfunction PlayerList({ players }) {\n  return (\n    <List id=\"playerList\">\n      {players.map(player => renderPlayer(player))}\n    </List>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PlayerList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPlayers } from '../../reducers/playerReducer';\nimport Introduction from '../../components/player/Introduction';\nimport FilterForm from '../../components/player/FilterForm';\nimport PlayerList from '../../components/player/PlayerList';\n\nconst nameContainsFilter = (name, filter) => name.toLowerCase().includes(filter.toLowerCase());\n\nclass PlayerPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      playerName: '',\n      filteredPlayers: [],\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.filterPlayers = this.filterPlayers.bind(this);\n  }\n\n  async componentDidMount() {\n    const { getAllPlayers } = this.props;\n    const { playerName } = this.state;\n    await getAllPlayers();\n    this.filterPlayers(playerName);\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      playerName: e.target.value,\n    });\n    this.filterPlayers(e.target.value);\n  }\n\n  filterPlayers(filter) {\n    const { player } = this.props;\n    const { players } = player;\n    const filteredPlayers = players.filter(dbPlayer => nameContainsFilter(dbPlayer.name, filter));\n    this.setState({\n      filteredPlayers,\n    });\n  }\n\n  amountOfResults() {\n    const { filteredPlayers } = this.state;\n    const { length } = filteredPlayers;\n    if (length === 0) {\n      return (\n        <h2>No players found</h2>);\n    }\n    return (\n      <h2>\n        {`Showing ${length} players that matched your search`}\n      </h2>\n    );\n  }\n\n  render() {\n    const { player } = this.props;\n    if (!player || player.loading) {\n      return (\n        <p>\n          Please be patient :)\n        </p>\n      );\n    }\n    if (player.error) {\n      return (\n        <p>\n           Error\n        </p>\n      );\n    }\n    const { playerName, filteredPlayers } = this.state;\n    return (\n      <div>\n        <Introduction />\n        <FilterForm handleNameChange={this.handleNameChange} playerName={playerName} />\n        {this.amountOfResults()}\n        <PlayerList players={filteredPlayers} />\n      </div>\n    );\n  }\n}\n\nPlayerPage.propTypes = {\n  getAllPlayers: PropTypes.func.isRequired,\n  player: PropTypes.shape({\n    players: PropTypes.array.isRequired,\n    error: PropTypes.bool.isRequired,\n    loading: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  getAllPlayers: getPlayers,\n};\n\nconst mapStateToProps = state => ({\n  player: state.player,\n});\n\nconst connectedPlayerPage = connect(mapStateToProps, mapDispatchToProps)(PlayerPage);\n\nexport default connectedPlayerPage;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nfunction Graph({\n  header, label, labels, data, options,\n}) {\n  const lineData = {\n    labels,\n    datasets: [\n      {\n        label,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data,\n      },\n    ],\n  };\n  return (\n    <div>\n      <h2>\n        {header}\n      </h2>\n      <Line data={lineData} options={options} />\n    </div>\n  );\n}\n\nGraph.propTypes = {\n  labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\n  header: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    scale: PropTypes.shape({\n      yAxes: PropTypes.shape({\n        ticks: PropTypes.shape({\n          reverse: PropTypes.shape({ reverse: PropTypes.bool.isRequired }),\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default Graph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Graph from './Graph';\n\nconst mapDates = positions => positions.map(position => position.date.substring(0, 10));\n\nconst mapRatings = positions => positions.map(position => position.rating);\n\nconst mapPositions = positions => positions.map(position => position.position);\n\nfunction Graphs({ positions }) {\n  const dates = mapDates(positions);\n  const ratings = mapRatings(positions);\n  const onlyPositions = mapPositions(positions);\n  const reverse = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          reverse: true,\n        },\n      }],\n    },\n  };\n\n  const normal = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          reverse: false,\n        },\n      }],\n    },\n  };\n\n  return (\n    <div>\n      <Graph\n        labels={dates}\n        data={ratings}\n        header=\"Rating over time\"\n        label=\"Rating\"\n        options={normal}\n      />\n      <Graph\n        labels={dates}\n        data={onlyPositions}\n        header=\"Position in mens ranking over time\"\n        label=\"Position\"\n        options={reverse}\n      />\n    </div>\n  );\n}\n\nGraphs.propTypes = {\n  positions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Graphs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getPlayer } from '../../reducers/playerReducer';\nimport Graphs from '../../components/graph/Graphs';\n\nconst sortPositionsByDate = positions => positions.sort((a, b) => {\n  const dateA = new Date(a.date);\n  const dateB = new Date(b.date);\n  return dateA.getTime() - dateB.getTime();\n});\n\nclass PlayerView extends React.Component {\n  componentDidMount() {\n    const { location, getPlayerById } = this.props;\n    const { playerId } = location.match.params;\n    getPlayerById(playerId);\n  }\n\n  render() {\n    const { player } = this.props;\n    const { selectedPlayer } = player;\n    if (!player || player.loading) {\n      return (\n        <p>\n          Loading\n        </p>\n      );\n    }\n    if (!selectedPlayer || player.error) {\n      return (\n        <p>\n          Error\n        </p>\n      );\n    }\n    const sorted = sortPositionsByDate(selectedPlayer.positions);\n    return (\n      <div id=\"playerView\">\n        <h2>\n          {`Statistics of ${selectedPlayer.name}`}\n        </h2>\n        <Graphs positions={sorted} />\n      </div>\n\n    );\n  }\n}\n\nPlayerView.propTypes = {\n  location: PropTypes.shape({\n    match: { params: { rankingId: PropTypes.string } },\n  }).isRequired,\n  getPlayerById: PropTypes.func.isRequired,\n  player: PropTypes.shape({\n    loading: PropTypes.bool,\n    error: PropTypes.bool,\n    players: PropTypes.array,\n    selectedPlayer: {\n      name: PropTypes.string, position: PropTypes.number, rating: PropTypes.number,\n    },\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  player: state.player,\n});\n\nconst mapDispatchToProps = {\n  getPlayerById: getPlayer,\n};\n\nconst connectedPlayerView = connect(mapStateToProps, mapDispatchToProps)(PlayerView);\n\nexport default connectedPlayerView;\n","import React from 'react';\nimport {\n  Header, Icon, Segment, Divider,\n} from 'semantic-ui-react';\n\nconst AboutPage = () => (\n  <div id=\"aboutPage\">\n    <Header as=\"h2\" icon textAlign=\"center\">\n      <Icon name=\"table tennis\" circular />\n      <Header.Content>\n          Welcome to Ranking-app!\n      </Header.Content>\n    </Header>\n    <Segment>\n        Purpose of this website is to offer long term statisctics\n        for players who play in Finland.\n      <Divider />\n          This website is developed in co-operation with Finnish table tennis union:\n      {' '}\n      <a href=\"http://www.sptl.fi/sptl_uudet/\">\n          www.sptl.fi\n      </a>\n      <Divider />\n      <Icon name=\"github\" circular />\n          View source code:\n      {' '}\n      <a href=\"https://github.com/FummiTaksi/ranking-app-backend\">\n        https://github.com/FummiTaksi/ranking-app-backend\n      </a>\n      <Divider />\n      Any questions or suggestions?\n      {' '}\n      <a href=\"mailto:mustonealeksi@gmail.com\">\n         Please contact\n      </a>\n    </Segment>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport {\n  HashRouter as Router, Route, Link,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Menu, Button, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport SignInForm from './signin/SignInForm';\nimport Notification from './notification/Notification';\nimport RankingForm from './ranking/RankingForm';\nimport RankingList from './ranking/RankingList';\nimport RankingView from './ranking/RankingView';\nimport PlayerPage from './player/PlayerPage';\nimport PlayerView from './player/PlayerView';\nimport AboutPage from '../components/about/Aboutpage';\n\nimport { logout, initCurrentUser } from '../reducers/loginReducer';\n\nconst linkWithIcon = (path, text, iconName) => (\n  <Menu.Item>\n    <Link to={path}>\n      {text}\n      <Icon name={iconName} />\n    </Link>\n  </Menu.Item>\n);\n\nclass RankingApp extends React.Component {\n  componentDidMount() {\n    const { initUser } = this.props;\n    initUser();\n  }\n\n  logInOrLogOut() {\n    const { credentials, logOut } = this.props;\n    const { username } = credentials;\n    if (username) {\n      return (\n        <div id=\"loggedIn\">\n          <p>\n            {`You are logged in as ${username} `}\n          </p>\n          <Button id=\"logOut\" onClick={() => logOut()}>\n            <Icon name=\"sign out alternate\" />\n            Logout\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {linkWithIcon('/signin', 'Sign in', 'sign in alternate')}\n      </div>\n    );\n  }\n\n  renderUploadLink() {\n    const { credentials } = this.props;\n    const { username } = credentials;\n    if (username) {\n      return (\n        <div>\n          {linkWithIcon('/upload', 'Create new ranking', 'plus')}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Menu>\n              {linkWithIcon('/', 'Players', 'id card')}\n              {this.renderUploadLink()}\n              {linkWithIcon('/rankings', 'Rankings', 'ordered list')}\n              {linkWithIcon('/about', 'About', 'question circle')}\n              {this.logInOrLogOut()}\n            </Menu>\n            <Route exact path=\"/about\" render={() => <AboutPage />} />\n            <Route exact path=\"/signin\" render={() => <SignInForm />} />\n            <Route exact path=\"/upload\" render={() => <RankingForm />} />\n            <Route exact path=\"/rankings\" render={() => <RankingList />} />\n            <Route exact path=\"/rankings/:rankingId\" render={location => <RankingView location={location} />} />\n            <Route exact path=\"/\" render={() => <PlayerPage />} />\n            <Route exact path=\"/players/:playerId\" render={location => <PlayerView location={location} />} />\n          </div>\n        </Router>\n        <Notification />\n      </div>\n    );\n  }\n}\n\nRankingApp.propTypes = {\n  initUser: PropTypes.func.isRequired,\n  logOut: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.login,\n});\n\nconst mapDispatchToProps = {\n  logOut: logout,\n  initUser: initCurrentUser,\n};\n\nconst ConnectedRankingApp = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RankingApp);\n\nexport default ConnectedRankingApp;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport notificationReducer from './reducers/notificationReducer';\nimport loginReducer from './reducers/loginReducer';\nimport rankingReducer from './reducers/rankingReducer';\nimport playerReducer from './reducers/playerReducer';\nimport { tokenChanger } from './services/rankingService';\n\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  login: loginReducer,\n  ranking: rankingReducer,\n  player: playerReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk, tokenChanger),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport RankingApp from './containers/RankingApp';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <RankingApp />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}