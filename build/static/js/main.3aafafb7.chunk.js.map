{"version":3,"sources":["components/form/Input.jsx","services/loginService.js","reducers/notificationReducer.js","reducers/loginReducer.js","containers/signin/SignInForm.jsx","containers/notification/Notification.jsx","services/rankingService.js","reducers/rankingReducer.js","containers/ranking/RankingForm.jsx","containers/ranking/RankingList.jsx","components/ranking/PositionList.jsx","containers/ranking/RankingView.jsx","services/playerService.js","reducers/playerReducer.js","components/player/Introduction.jsx","components/player/FilterForm.jsx","components/player/PlayerList.jsx","containers/player/PlayerPage.jsx","components/graph/Graph.jsx","components/graph/Graphs.jsx","containers/player/PlayerView.jsx","components/about/Aboutpage.jsx","containers/RankingApp.jsx","store.js","index.js"],"names":["Input","_ref","text","type","name","value","onChange","react_default","a","createElement","loginService","login","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","response","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","this","_x","apply","arguments","initialState","icon","header","message","dispatchNotification","dispatch","setTimeout","reducer","store","length","undefined","action","username","admin","token","userInfo","window","localStorage","setItem","JSON","stringify","removeItem","SignInForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","password","handleFormChange","bind","assertThisInitialized","logIn","e","setState","defineProperty","target","preventDefault","_this$state","onSubmit","form_Input","React","Component","mapDispatchToProps","content","concat","t0","ConnectedSignInForm","connect","ConnectedNotification","notification","className","Message","getConfigObject","headers","Authorization","createRanking","url","deleteRanking","_ref2","_callee2","rankingId","_context2","delete","_x2","getRanking","_ref3","_callee3","_context3","get","_x3","rankingService","getRankings","_ref4","_callee4","_context4","allRankings","selectedRanking","loading","toConsumableArray","ranking","objectSpread","rankings","notDeleted","filter","b","_id","deletedRanking","RankingForm","rankingFileBase64","rankingFileName","rankingName","rankingDate","Date","toString","onDrop","sendFile","approved","_this2","droppedFile","reader","FileReader","onload","event","result","readAsDataURL","createNewRanking","_this$state2","_this$state3","filenameText","id","dist_es","multiple","accept","style","borderStyle","renderDropzone","renderDroppedFileName","renderUploadForm","renderFileUploadingForm","createContent","connectedRankingForm","getTimeOfCompetition","rankingObject","date","getTime","RankingList","getAllRankings","deleteRankingById","onClick","substring","linkToRanking","Table","Row","key","Cell","Link","to","competitionName","positions","deleteButton","orderedRankings","slice","sort","Header","HeaderCell","Body","map","mapRanking","renderRankingCell","connectedRankingList","renderPositionCell","positionObject","position","playerName","clubName","rating","PositionList","RankingView","selectedIndex","toggleLeft","toggleRight","_this$props","location","getRankingById","match","params","listLength","Button","disabled","Icon","orderedPositions","orderPositions","orderedPositionGroups","i","reduce","currentList","currentPosition","copyList","push","orderPositionGroups","players","pageInfo","renderNavigationButtons","ranking_PositionList","_x4","connectedRankingView","playerService","getPlayers","getPlayer","selectedPlayer","error","player","typeIsError","Introduction","as","textAlign","circular","Content","FilterForm","handleNameChange","Input_Input","renderPlayer","List","Item","PlayerList","PlayerPage","filteredPlayers","filterPlayers","getAllPlayers","dbPlayer","toLowerCase","includes","nameContainsFilter","player_Introduction","player_FilterForm","amountOfResults","player_PlayerList","connectedPlayerPage","Graph","label","labels","options","lineData","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","react_chartjs_2_es","mapDates","mapRatings","mapPositions","Graphs","dates","ratings","onlyPositions","graph_Graph","scales","yAxes","ticks","reverse","PlayerView","getPlayerById","playerId","sorted","dateA","dateB","graph_Graphs","connectedPlayerView","AboutPage","Segment","Divider","href","linkWithIcon","path","iconName","Menu","RankingApp","initUser","logOut","HashRouter","renderUploadLink","logInOrLogOut","Route","exact","render","Aboutpage","signin_SignInForm","ranking_RankingForm","ranking_RankingList","ranking_RankingView","player_PlayerPage","player_PlayerView","notification_Notification","loggedUserJSON","getItem","parse","ConnectedRankingApp","combineReducers","notificationReducer","loginReducer","rankingReducer","playerReducer","createStore","applyMiddleware","thunk","newToken","getState","ReactDOM","es","containers_RankingApp","document","getElementById"],"mappings":"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","file":"static/js/main.3aafafb7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input({\n  text, type, name, value, onChange,\n}) {\n  return (\n    <div>\n      {text}\n      <input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\nInput.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","const initialState = { icon: '', header: '', message: '' };\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'CHANGE_NOTIFICATION') {\n    return action.message;\n  }\n  return store;\n};\n\nexport const notificationChange = (message, time) => async (dispatch) => {\n  dispatch({\n    type: 'CHANGE_NOTIFICATION',\n    message,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: 'CHANGE_NOTIFICATION',\n      message: {\n        icon: '',\n        header: '',\n        message: '',\n      },\n    });\n  }, time * 1000);\n};\n\nexport const dispatchNotification = (dispatch, message) => {\n  dispatch({\n    type: 'CHANGE_NOTIFICATION',\n    message,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: 'CHANGE_NOTIFICATION',\n      message: {\n        icon: '',\n        header: '',\n        message: '',\n      },\n    });\n  }, 5 * 1000);\n};\n\nexport default reducer;\n","import loginService from '../services/loginService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = {\n  username: undefined,\n  admin: undefined,\n  token: '',\n};\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'LOGIN') {\n    const userInfo = {\n      username: action.username,\n      admin: action.admin,\n      token: action.token,\n    };\n    window.localStorage.setItem('loggedUser', JSON.stringify(userInfo));\n    return {\n      username: action.username,\n      admin: action.admin,\n      token: action.token,\n    };\n  }\n  if (action.type === 'LOGOUT') {\n    window.localStorage.removeItem('loggedUser');\n    return {\n      username: undefined,\n      admin: undefined,\n      token: '',\n    };\n  }\n  return store;\n};\n\nexport const login = credentials => async (dispatch) => {\n  try {\n    const response = await loginService.login(credentials);\n    dispatch({\n      type: 'LOGIN',\n      username: response.username,\n      admin: response.admin,\n      token: response.token,\n    });\n    const header = 'Login successfully!';\n    const content = `Welcome back, ${response.username}!`;\n    const icon = 'sign in alternate';\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Login failed!';\n    const content = 'Wrong username or password!';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: 'LOGOUT',\n  });\n  const header = 'Logout successfully!';\n  const content = 'Thank you, come again!';\n  const icon = 'sign out alternate';\n  dispatchNotification(dispatch, { header, content, icon });\n};\n\nexport const initCurrentUser = () => async (dispatch) => {\n  const loggedUserJSON = window.localStorage.getItem('loggedUser');\n  if (loggedUserJSON) {\n    const credentials = JSON.parse(loggedUserJSON);\n    dispatch({\n      type: 'LOGIN',\n      username: credentials.username,\n      admin: credentials.admin,\n      token: credentials.token,\n    });\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../components/form/Input';\nimport { login } from '../../reducers/loginReducer';\n\nclass SignInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  handleFormChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  logIn(e) {\n    e.preventDefault();\n    const { logIn } = this.props;\n    logIn(this.state);\n    this.setState({\n      username: '',\n      password: '',\n    });\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div>\n        <h2>\n          Signing in is only available for admin!\n        </h2>\n        <form onSubmit={this.logIn}>\n          <Input\n            type=\"input\"\n            text=\"Username:\"\n            name=\"username\"\n            value={username}\n            onChange={this.handleFormChange}\n          />\n          <Input\n            type=\"password\"\n            text=\"Password:\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleFormChange}\n          />\n          <button type=\"submit\">\n            Log in\n            {' '}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nSignInForm.propTypes = {\n  logIn: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  logIn: login,\n};\n\nconst ConnectedSignInForm = connect(\n  null,\n  mapDispatchToProps,\n)(SignInForm);\n\nexport default ConnectedSignInForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nfunction Notification({ notification }) {\n  if (notification.icon === '') {\n    return null;\n  }\n  return (\n    <div className=\"success\">\n      <Message\n        icon={notification.icon}\n        header={notification.header}\n        content={notification.content}\n      />\n    </div>\n  );\n}\nNotification.propTypes = {\n  notification: PropTypes.shape({\n    icon: PropTypes.string,\n    header: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  notification: state.notification,\n});\n\nconst ConnectedNotification = connect(\n  mapStateToProps,\n)(Notification);\n\nexport default ConnectedNotification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/ranking';\n\nlet token = '';\n\nconst getConfigObject = () => ({\n  headers: { Authorization: token },\n});\n\nconst createRanking = async (credentials) => {\n  const url = `${baseUrl}/new`;\n  const response = await axios.post(url, credentials, getConfigObject());\n  return response.data;\n};\n\nconst deleteRanking = async (rankingId) => {\n  const url = `${baseUrl}/${rankingId}`;\n  const response = await axios.delete(url, getConfigObject());\n  return response.data;\n};\n\nconst getRanking = async (rankingId) => {\n  const url = `${baseUrl}/${rankingId}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst getRankings = async () => {\n  const url = `${baseUrl}/`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const tokenChanger = store => next => (action) => {\n  next(action);\n  const state = store.getState();\n  const newToken = state.login.token;\n  token = `bearer ${newToken}`;\n};\n\nexport default {\n  createRanking, getRankings, deleteRanking, getRanking,\n};\n","import rankingService from '../services/rankingService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = { allRankings: [], selectedRanking: {}, loading: false };\n\nconst reducer = (store = initialState, action) => {\n  if (action.type === 'CREATE_RANKING') {\n    const allRankings = [...store.allRankings, action.content.ranking];\n    const newState = { ...store, allRankings, loading: false };\n    return newState;\n  }\n  if (action.type === 'CREATING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'SETTING_RANKINGS') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'SET_RANKINGS') {\n    const newState = { ...store, allRankings: action.content.rankings, loading: false };\n    return newState;\n  }\n  if (action.type === 'DELETING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'DELETE_RANKING') {\n    const notDeleted = store.allRankings.filter(b => b._id !== action.content.deletedRanking._id);\n    const newState = { ...store, allRankings: notDeleted, loading: false };\n    return newState;\n  }\n  if (action.type === 'GETTING_RANKING') {\n    const newState = { ...store, loading: true };\n    return newState;\n  }\n  if (action.type === 'GET_RANKING') {\n    const newState = { ...store, selectedRanking: action.content.ranking, loading: false };\n    return newState;\n  }\n  return store;\n};\n\nexport const createRanking = createContent => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'CREATING_RANKING',\n    });\n    const response = await rankingService.createRanking(createContent);\n    const header = `Ranking ${createContent.rankingName} was created succsefully!`;\n    const content = 'Click Rankings to view ranking you created.';\n    const icon = 'thumbs up';\n    dispatch({\n      type: 'CREATE_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error occured while creating ranking';\n    const content = 'Make sure excel file is correct rating file';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const deleteRanking = rankingId => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'DELETING_RANKING',\n    });\n    const response = await rankingService.deleteRanking(rankingId);\n    const header = `Ranking ${response.deletedRanking.competitionName} was deleted succsefully!`;\n    const content = 'Page should update list automatically';\n    const icon = 'thumbs up';\n    dispatch({\n      type: 'DELETE_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error occured while deleting ranking';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const getRankings = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'SETTING_RANKINGS',\n    });\n    const response = await rankingService.getRankings();\n    const header = 'Rankings fetched successfully!';\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'SET_RANKINGS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching rankings';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport const getRanking = rankingId => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_RANKING',\n    });\n    const response = await rankingService.getRanking(rankingId);\n    const header = `Ranking ${response.ranking.competitionName} fetched successfully!`;\n    const content = 'Have fun browsing!';\n    const icon = 'trophy';\n    dispatch({\n      type: 'GET_RANKING',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching ranking';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport { createRanking } from '../../reducers/rankingReducer';\nimport Input from '../../components/form/Input';\n\nconst youAreNotAllowed = () => (\n  <h3>\n    You are not allowed to be here\n  </h3>\n);\n\nclass RankingForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rankingFileBase64: undefined,\n      rankingFileName: '',\n      rankingName: '',\n      rankingDate: new Date().toString(),\n    };\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.sendFile = this.sendFile.bind(this);\n  }\n\n  onDrop(approved) {\n    const droppedFile = approved[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({\n        rankingFileBase64: event.target.result,\n        rankingFileName: droppedFile.name,\n      });\n    };\n    reader.readAsDataURL(droppedFile);\n  }\n\n  sendFile(e) {\n    e.preventDefault();\n    const { rankingFileBase64, rankingName, rankingDate } = this.state;\n    const credentials = {\n      rankingFileBase64,\n      rankingName,\n      rankingDate,\n    };\n    const { createNewRanking } = this.props;\n    createNewRanking(credentials);\n    this.setState({\n      rankingFileBase64: undefined,\n      rankingFileName: '',\n      rankingName: '',\n      rankingDate: '',\n    });\n  }\n\n  handleFormChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  renderUploadForm() {\n    const { rankingFileBase64, rankingName, rankingDate } = this.state;\n    if (rankingFileBase64) {\n      return (\n        <form onSubmit={this.sendFile}>\n          <Input\n            type=\"input\"\n            text=\"Name of ranking:\"\n            name=\"rankingName\"\n            value={rankingName}\n            onChange={this.handleFormChange}\n          />\n          <Input\n            type=\"date\"\n            text=\"Date of competition:\"\n            name=\"rankingDate\"\n            value={rankingDate}\n            onChange={this.handleFormChange}\n          />\n          <button type=\"submit\">\n            Upload\n          </button>\n        </form>\n      );\n    }\n    return null;\n  }\n\n  renderDroppedFileName() {\n    const { rankingFileBase64, rankingFileName } = this.state;\n    if (rankingFileBase64) {\n      const filenameText = `Filename: ${rankingFileName}`;\n      return (\n        <p>\n          {filenameText}\n        </p>\n      );\n    }\n    return null;\n  }\n\n  renderDropzone() {\n    return (\n      <div id=\"fileDrop\">\n        <h3>\n          Drop excel file to create new ranking\n        </h3>\n        <Dropzone\n          className=\"field upload-box\"\n          onDrop={this.onDrop}\n          multiple={false}\n          accept=\".xls\"\n        >\n          <div className=\"field\" style={{ borderStyle: 'dashed' }}>\n            <p className=\"upload-p\">\n              Click to navigate to the file or drag and drop them here.\n            </p>\n            <br />\n          </div>\n        </Dropzone>\n      </div>\n    );\n  }\n\n  renderFileUploadingForm() {\n    return (\n      <div>\n        {this.renderDropzone()}\n        {this.renderDroppedFileName()}\n        {this.renderUploadForm()}\n      </div>\n    );\n  }\n\n  render() {\n    const { credentials } = this.props;\n    const { admin } = credentials;\n    return (\n      <div>\n        {admin && this.renderFileUploadingForm()}\n        {!admin && youAreNotAllowed()}\n      </div>\n    );\n  }\n}\n\nRankingForm.propTypes = {\n  createNewRanking: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    admin: PropTypes.bool,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  createNewRanking: createRanking,\n};\n\nconst mapStateToProps = state => ({ credentials: state.login });\n\nconst connectedRankingForm = connect(mapStateToProps, mapDispatchToProps)(RankingForm);\n\nexport default connectedRankingForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getRankings, deleteRanking } from '../../reducers/rankingReducer';\n\nconst getTimeOfCompetition = (rankingObject) => {\n  const date = new Date(rankingObject.date);\n  return date.getTime();\n};\n\nconst orderRankingsByDate = (rankings) => {\n  const copyList = rankings.slice();\n  return copyList.sort((a, b) => getTimeOfCompetition(b) - getTimeOfCompetition(a));\n};\n\nclass RankingList extends React.Component {\n  async componentDidMount() {\n    const { getAllRankings } = this.props;\n    await getAllRankings();\n  }\n\n  deleteRanking(rankingId) {\n    const { deleteRankingById } = this.props;\n    deleteRankingById(rankingId);\n  }\n\n  deleteButton(rankingId) {\n    return (\n      <button type=\"button\" className=\"delete\" onClick={() => this.deleteRanking(rankingId)}>\n        Delete\n      </button>\n    );\n  }\n\n  renderRankingCell(rankingObject) {\n    const date = rankingObject.date.substring(0, 10);\n    const linkToRanking = `/rankings/${rankingObject._id}`;\n    const { credentials } = this.props;\n    const { admin } = credentials;\n    return (\n      <Table.Row key={rankingObject._id}>\n        <Table.Cell>\n          <Link to={linkToRanking}>\n            {' '}\n            {rankingObject.competitionName}\n          </Link>\n        </Table.Cell>\n        <Table.Cell>\n          {date}\n        </Table.Cell>\n        <Table.Cell>\n          {rankingObject.positions.length }\n        </Table.Cell>\n        <Table.Cell>\n          { admin && this.deleteButton(rankingObject._id)}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  render() {\n    const { ranking } = this.props;\n    const { allRankings } = ranking;\n    if (ranking.loading) {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui textloader\">\n              Loading rankings from database\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (allRankings.length === 0) {\n      return (\n        <p id=\"noRankings\">\n          No rankings saved to database yet\n        </p>\n      );\n    }\n    const orderedRankings = orderRankingsByDate(allRankings);\n    return (\n      <div id=\"rankingList\">\n        <h3>\n          {`Here are all ${orderedRankings.length} rankings that are uploaded to this site`}\n        </h3>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                Competition name\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                Date\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                Players\n              </Table.HeaderCell>\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {orderedRankings.map(mapRanking => this.renderRankingCell(mapRanking))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}\n\nRankingList.propTypes = {\n  getAllRankings: PropTypes.func.isRequired,\n  deleteRankingById: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    admin: PropTypes.bool,\n  }).isRequired,\n  ranking: PropTypes.shape({\n    allRankings: PropTypes.array,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  getAllRankings: getRankings,\n  deleteRankingById: deleteRanking,\n};\n\nconst mapStateToProps = state => ({\n  ranking: state.ranking,\n  credentials: state.login,\n});\n\nconst connectedRankingList = connect(mapStateToProps, mapDispatchToProps)(RankingList);\nexport default connectedRankingList;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst renderPositionCell = positionObject => (\n  <Table.Row key={positionObject._id}>\n    <Table.Cell>\n      {positionObject.position}\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.playerName}\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.clubName }\n    </Table.Cell>\n    <Table.Cell>\n      {positionObject.rating}\n    </Table.Cell>\n  </Table.Row>\n);\n\nfunction PositionList({ positions }) {\n  return (\n    <div>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              Position\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Player\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Club\n            </Table.HeaderCell>\n            <Table.HeaderCell>\n              Rating\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <tbody>\n          {positions.map(position => renderPositionCell(position))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nPositionList.propTypes = {\n  positions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PositionList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { getRanking } from '../../reducers/rankingReducer';\nimport PositionList from '../../components/ranking/PositionList';\n\nconst orderPositions = (selectedRanking) => {\n  const copyList = selectedRanking.positions.slice();\n  return copyList.sort((a, b) => a.position - b.position);\n};\n\nconst orderPositionGroups = (orderedPositions) => {\n  let i = 0;\n  return orderedPositions.reduce((currentList, currentPosition) => {\n    const copyList = currentList;\n    if (copyList[i] && currentList[i].length >= 100) {\n      i += 1;\n    }\n    if (!currentList[i]) {\n      copyList[i] = [];\n    }\n    copyList[i].push(currentPosition);\n    return copyList;\n  }, []);\n};\n\nclass RankingView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n    };\n    this.toggleLeft = this.toggleLeft.bind(this);\n    this.toggleRight = this.toggleRight.bind(this);\n  }\n\n  componentDidMount() {\n    const { location, getRankingById } = this.props;\n    const { rankingId } = location.match.params;\n    getRankingById(rankingId);\n  }\n\n  toggleLeft() {\n    const { selectedIndex } = this.state;\n    this.setState({\n      selectedIndex: selectedIndex - 1,\n    });\n  }\n\n  toggleRight() {\n    const { selectedIndex } = this.state;\n    this.setState({\n      selectedIndex: selectedIndex + 1,\n    });\n  }\n\n  renderNavigationButtons(listLength) {\n    const { selectedIndex } = this.state;\n    return (\n      <div id=\"navigationButtons\">\n        <Button\n          onClick={this.toggleLeft}\n          disabled={selectedIndex === 0}\n        >\n          <Icon name=\"angle double left\" />\n        </Button>\n        <Button\n          onClick={this.toggleRight}\n          disabled={selectedIndex === listLength - 1}\n        >\n          <Icon name=\"angle double right\" />\n        </Button>\n      </div>\n    );\n  }\n\n  render() {\n    const { ranking } = this.props;\n    if (ranking.loading) {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui textloader\">\n              Loading ranking from database\n            </div>\n          </div>\n        </div>\n      );\n    }\n    const { selectedRanking } = ranking;\n    if (!selectedRanking.positions) {\n      return (\n        <p>\n          No ranking with this id!\n        </p>\n      );\n    }\n    const orderedPositions = orderPositions(selectedRanking);\n    const orderedPositionGroups = orderPositionGroups(orderedPositions);\n    const players = `${selectedRanking.competitionName}, players ${orderedPositions.length}`;\n    const { selectedIndex } = this.state;\n    const pageInfo = `Showing page ${selectedIndex + 1} / ${orderedPositionGroups.length}`;\n    return (\n      <div>\n        <h3>\n          {players}\n        </h3>\n        <h4>\n          {pageInfo}\n        </h4>\n        {this.renderNavigationButtons(orderedPositionGroups.length)}\n        <PositionList positions={orderedPositionGroups[selectedIndex]} />\n        {this.renderNavigationButtons(orderedPositionGroups.length)}\n      </div>\n\n    );\n  }\n}\n\nRankingView.propTypes = {\n  location: PropTypes.shape({\n    match: { params: { rankingId: PropTypes.string } },\n  }).isRequired,\n  ranking: PropTypes.shape({\n    loading: PropTypes.bool,\n    allRankings: PropTypes.array,\n    selectedRanking: { positions: PropTypes.array, competitionName: PropTypes.string },\n  }).isRequired,\n  getRankingById: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  getRankingById: getRanking,\n};\n\nconst mapStateToProps = state => ({\n  ranking: state.ranking,\n});\n\nconst connectedRankingView = connect(mapStateToProps, mapDispatchToProps)(RankingView);\n\nexport default connectedRankingView;\n","import axios from 'axios';\n\nconst baseUrl = '/api/players';\n\nconst getPlayers = async () => {\n  const url = `${baseUrl}/`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nconst getPlayer = async (id) => {\n  const url = `${baseUrl}/${id}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport default { getPlayers, getPlayer };\n","import playerService from '../services/playerService';\nimport { dispatchNotification } from './notificationReducer';\n\nconst initialState = {\n  players: [], selectedPlayer: undefined, loading: false, error: false,\n};\n\nconst typeIsLoading = type => type === 'GETTING_PLAYERS' || type === 'GETTING_PLAYER';\n\nconst typeIsError = type => type === 'GET_PLAYERS_FAILURE' || type === 'GET_PLAYER_FAILURE';\n\nconst reducer = (store = initialState, action) => {\n  if (typeIsLoading(action.type)) {\n    const newState = { ...store, loading: true, error: false };\n    return newState;\n  }\n  if (action.type === 'GET_PLAYERS_SUCCESS') {\n    const newState = {\n      ...store, players: action.content.players, loading: false, error: false,\n    };\n    return newState;\n  }\n  if (action.type === 'GET_PLAYER_SUCCESS') {\n    const newState = {\n      ...store, selectedPlayer: action.content.player, loading: false, error: false,\n    };\n    return newState;\n  }\n  if (typeIsError(action.type)) {\n    const newState = { ...store, loading: false, error: true };\n    return newState;\n  }\n  return store;\n};\n\n\nexport const getPlayers = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_PLAYERS',\n    });\n    const response = await playerService.getPlayers();\n    const header = 'Players fetched successfully!';\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'GET_PLAYERS_SUCCESS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching players';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatch({\n      type: 'GET_PLAYERS_FAILURE',\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\n\n\nexport const getPlayer = id => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'GETTING_PLAYER',\n    });\n    const response = await playerService.getPlayer(id);\n    const header = `Player ${response.player.name} fetched successfully!`;\n    const content = '';\n    const icon = 'list ul';\n    dispatch({\n      type: 'GET_PLAYER_SUCCESS',\n      content: response,\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  } catch (error) {\n    const header = 'Error while fetching player';\n    const content = 'Try again later';\n    const icon = 'thumbs down';\n    dispatch({\n      type: 'GET_PLAYER_FAILURE',\n    });\n    dispatchNotification(dispatch, { header, content, icon });\n  }\n};\nexport default reducer;\n","import React from 'react';\nimport {\n  Header, Icon,\n} from 'semantic-ui-react';\n\nconst Introduction = () => (\n  <div>\n    <Header as=\"h2\" icon textAlign=\"center\">\n      <Icon name=\"chart line\" circular />\n      <Header.Content>\n        All rating data in one place\n      </Header.Content>\n      <div className=\"sub header\">\n       Filter players by writing players name, click players name to view statistics\n      </div>\n      <div className=\"sub header\">\n        NOTE: Write surname before firstname\n      </div>\n    </Header>\n  </div>\n);\n\nexport default Introduction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\n\nfunction FilterForm({ handleNameChange, playerName }) {\n  return (\n    <div>\n    Name:\n      <Input type=\"text\" onChange={handleNameChange} value={playerName} text=\"Name\" />\n    </div>\n  );\n}\n\nFilterForm.propTypes = {\n  handleNameChange: PropTypes.func.isRequired,\n  playerName: PropTypes.string.isRequired,\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { List } from 'semantic-ui-react';\n\nconst renderPlayer = player => (\n  <List.Item key={player._id} id={player._id}>\n    <Link to={`/players/${player._id}`}>\n      {player.name}\n    </Link>\n  </List.Item>\n);\n\nfunction PlayerList({ players }) {\n  return (\n    <List id=\"playerList\">\n      {players.map(player => renderPlayer(player))}\n    </List>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PlayerList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getPlayers } from '../../reducers/playerReducer';\nimport Introduction from '../../components/player/Introduction';\nimport FilterForm from '../../components/player/FilterForm';\nimport PlayerList from '../../components/player/PlayerList';\n\nconst nameContainsFilter = (name, filter) => name.toLowerCase().includes(filter.toLowerCase());\n\nclass PlayerPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      playerName: '',\n      filteredPlayers: [],\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.filterPlayers = this.filterPlayers.bind(this);\n  }\n\n  async componentDidMount() {\n    const { getAllPlayers } = this.props;\n    const { playerName } = this.state;\n    await getAllPlayers();\n    this.filterPlayers(playerName);\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      playerName: e.target.value,\n    });\n    this.filterPlayers(e.target.value);\n  }\n\n  filterPlayers(filter) {\n    const { player } = this.props;\n    const { players } = player;\n    const filteredPlayers = players.filter(dbPlayer => nameContainsFilter(dbPlayer.name, filter));\n    this.setState({\n      filteredPlayers,\n    });\n  }\n\n  amountOfResults() {\n    const { filteredPlayers } = this.state;\n    const { length } = filteredPlayers;\n    if (length === 0) {\n      return (\n        <h2>No players found</h2>);\n    }\n    return (\n      <h2>\n        {`Showing ${length} players that matched your search`}\n      </h2>\n    );\n  }\n\n  render() {\n    const { player } = this.props;\n    if (!player || player.loading) {\n      return (\n        <p>\n          Please be patient :)\n        </p>\n      );\n    }\n    if (player.error) {\n      return (\n        <p>\n           Error\n        </p>\n      );\n    }\n    const { playerName, filteredPlayers } = this.state;\n    return (\n      <div>\n        <Introduction />\n        <FilterForm handleNameChange={this.handleNameChange} playerName={playerName} />\n        {this.amountOfResults()}\n        <PlayerList players={filteredPlayers} />\n      </div>\n    );\n  }\n}\n\nPlayerPage.propTypes = {\n  getAllPlayers: PropTypes.func.isRequired,\n  player: PropTypes.shape({\n    players: PropTypes.array.isRequired,\n    error: PropTypes.bool.isRequired,\n    loading: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = {\n  getAllPlayers: getPlayers,\n};\n\nconst mapStateToProps = state => ({\n  player: state.player,\n});\n\nconst connectedPlayerPage = connect(mapStateToProps, mapDispatchToProps)(PlayerPage);\n\nexport default connectedPlayerPage;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nfunction Graph({\n  header, label, labels, data, options,\n}) {\n  const lineData = {\n    labels,\n    datasets: [\n      {\n        label,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data,\n      },\n    ],\n  };\n  return (\n    <div>\n      <h2>\n        {header}\n      </h2>\n      <Line data={lineData} options={options} />\n    </div>\n  );\n}\n\nGraph.propTypes = {\n  labels: PropTypes.arrayOf(PropTypes.string).isRequired,\n  data: PropTypes.arrayOf(PropTypes.number).isRequired,\n  header: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    scale: PropTypes.shape({\n      yAxes: PropTypes.shape({\n        ticks: PropTypes.shape({\n          reverse: PropTypes.shape({ reverse: PropTypes.bool.isRequired }),\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default Graph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Graph from './Graph';\n\nconst mapDates = positions => positions.map(position => position.date.substring(0, 10));\n\nconst mapRatings = positions => positions.map(position => position.rating);\n\nconst mapPositions = positions => positions.map(position => position.position);\n\nfunction Graphs({ positions }) {\n  const dates = mapDates(positions);\n  const ratings = mapRatings(positions);\n  const onlyPositions = mapPositions(positions);\n  const reverse = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          reverse: true,\n        },\n      }],\n    },\n  };\n\n  const normal = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          reverse: false,\n        },\n      }],\n    },\n  };\n\n  return (\n    <div>\n      <Graph\n        labels={dates}\n        data={ratings}\n        header=\"Rating over time\"\n        label=\"Rating\"\n        options={normal}\n      />\n      <Graph\n        labels={dates}\n        data={onlyPositions}\n        header=\"Position in mens ranking over time\"\n        label=\"Position\"\n        options={reverse}\n      />\n    </div>\n  );\n}\n\nGraphs.propTypes = {\n  positions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Graphs;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getPlayer } from '../../reducers/playerReducer';\nimport Graphs from '../../components/graph/Graphs';\n\nconst sortPositionsByDate = positions => positions.sort((a, b) => {\n  const dateA = new Date(a.date);\n  const dateB = new Date(b.date);\n  return dateA.getTime() - dateB.getTime();\n});\n\nclass PlayerView extends React.Component {\n  componentDidMount() {\n    const { location, getPlayerById } = this.props;\n    const { playerId } = location.match.params;\n    getPlayerById(playerId);\n  }\n\n  render() {\n    const { player } = this.props;\n    const { selectedPlayer } = player;\n    if (!player || player.loading) {\n      return (\n        <p>\n          Loading\n        </p>\n      );\n    }\n    if (!selectedPlayer || player.error) {\n      return (\n        <p>\n          Error\n        </p>\n      );\n    }\n    const sorted = sortPositionsByDate(selectedPlayer.positions);\n    return (\n      <div id=\"playerView\">\n        <h2>\n          {`Statistics of ${selectedPlayer.name}`}\n        </h2>\n        <Graphs positions={sorted} />\n      </div>\n\n    );\n  }\n}\n\nPlayerView.propTypes = {\n  location: PropTypes.shape({\n    match: { params: { rankingId: PropTypes.string } },\n  }).isRequired,\n  getPlayerById: PropTypes.func.isRequired,\n  player: PropTypes.shape({\n    loading: PropTypes.bool,\n    error: PropTypes.bool,\n    players: PropTypes.array,\n    selectedPlayer: {\n      name: PropTypes.string, position: PropTypes.number, rating: PropTypes.number,\n    },\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  player: state.player,\n});\n\nconst mapDispatchToProps = {\n  getPlayerById: getPlayer,\n};\n\nconst connectedPlayerView = connect(mapStateToProps, mapDispatchToProps)(PlayerView);\n\nexport default connectedPlayerView;\n","import React from 'react';\nimport {\n  Header, Icon, Segment, Divider,\n} from 'semantic-ui-react';\n\nconst AboutPage = () => (\n  <div id=\"aboutPage\">\n    <Header as=\"h2\" icon textAlign=\"center\">\n      <Icon name=\"table tennis\" circular />\n      <Header.Content>\n          Welcome to Ranking-app!\n      </Header.Content>\n    </Header>\n    <Segment>\n        Purpose of this website is to offer long term statisctics\n        for players who play in Finland.\n      <Divider />\n          This website is developed in co-operation with Finnish table tennis union:\n      {' '}\n      <a href=\"http://www.sptl.fi/sptl_uudet/\">\n          www.sptl.fi\n      </a>\n      <Divider />\n      <Icon name=\"github\" circular />\n          View source code:\n      {' '}\n      <a href=\"https://github.com/FummiTaksi/ranking-app-backend\">\n        https://github.com/FummiTaksi/ranking-app-backend\n      </a>\n      <Divider />\n      Any questions or suggestions?\n      {' '}\n      <a href=\"mailto:mustonealeksi@gmail.com\">\n         Please contact\n      </a>\n    </Segment>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport {\n  HashRouter as Router, Route, Link,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Menu, Button, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport SignInForm from './signin/SignInForm';\nimport Notification from './notification/Notification';\nimport RankingForm from './ranking/RankingForm';\nimport RankingList from './ranking/RankingList';\nimport RankingView from './ranking/RankingView';\nimport PlayerPage from './player/PlayerPage';\nimport PlayerView from './player/PlayerView';\nimport AboutPage from '../components/about/Aboutpage';\n\nimport { logout, initCurrentUser } from '../reducers/loginReducer';\n\nconst linkWithIcon = (path, text, iconName) => (\n  <Menu.Item>\n    <Link to={path}>\n      {text}\n      <Icon name={iconName} />\n    </Link>\n  </Menu.Item>\n);\n\nclass RankingApp extends React.Component {\n  componentDidMount() {\n    const { initUser } = this.props;\n    initUser();\n  }\n\n  logInOrLogOut() {\n    const { credentials, logOut } = this.props;\n    const { username } = credentials;\n    if (username) {\n      return (\n        <div id=\"loggedIn\">\n          <p>\n            {`You are logged in as ${username} `}\n          </p>\n          <Button id=\"logOut\" onClick={() => logOut()}>\n            <Icon name=\"sign out alternate\" />\n            Logout\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {linkWithIcon('/signin', 'Sign in', 'sign in alternate')}\n      </div>\n    );\n  }\n\n  renderUploadLink() {\n    const { credentials } = this.props;\n    const { username } = credentials;\n    if (username) {\n      return (\n        <div>\n          {linkWithIcon('/upload', 'Create new ranking', 'plus')}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Menu>\n              {linkWithIcon('/', 'Players', 'id card')}\n              {this.renderUploadLink()}\n              {linkWithIcon('/rankings', 'Rankings', 'ordered list')}\n              {linkWithIcon('/about', 'About', 'question circle')}\n              {this.logInOrLogOut()}\n            </Menu>\n            <Route exact path=\"/about\" render={() => <AboutPage />} />\n            <Route exact path=\"/signin\" render={() => <SignInForm />} />\n            <Route exact path=\"/upload\" render={() => <RankingForm />} />\n            <Route exact path=\"/rankings\" render={() => <RankingList />} />\n            <Route exact path=\"/rankings/:rankingId\" render={location => <RankingView location={location} />} />\n            <Route exact path=\"/\" render={() => <PlayerPage />} />\n            <Route exact path=\"/players/:playerId\" render={location => <PlayerView location={location} />} />\n          </div>\n        </Router>\n        <Notification />\n      </div>\n    );\n  }\n}\n\nRankingApp.propTypes = {\n  initUser: PropTypes.func.isRequired,\n  logOut: PropTypes.func.isRequired,\n  credentials: PropTypes.shape({\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.login,\n});\n\nconst mapDispatchToProps = {\n  logOut: logout,\n  initUser: initCurrentUser,\n};\n\nconst ConnectedRankingApp = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RankingApp);\n\nexport default ConnectedRankingApp;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport notificationReducer from './reducers/notificationReducer';\nimport loginReducer from './reducers/loginReducer';\nimport rankingReducer from './reducers/rankingReducer';\nimport playerReducer from './reducers/playerReducer';\nimport { tokenChanger } from './services/rankingService';\n\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  login: loginReducer,\n  ranking: rankingReducer,\n  player: playerReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk, tokenChanger),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport RankingApp from './containers/RankingApp';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <RankingApp />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}